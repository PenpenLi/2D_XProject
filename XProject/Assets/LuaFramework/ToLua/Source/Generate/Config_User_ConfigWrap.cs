//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Config_User_ConfigWrap
{
	public static void Register(LuaState L)
	{
		L.BeginStaticLibs("User_Config");
		L.RegFunction("Initilize", Initilize);
		L.RegFunction("LoadConfig", LoadConfig);
		L.RegFunction("ResetConfig", ResetConfig);
		L.RegFunction("SetUserInfo", SetUserInfo);
		L.RegFunction("LoadGlobalSetting", LoadGlobalSetting);
		L.RegFunction("Save", Save);
		L.RegFunction("SaveInEditorModel", SaveInEditorModel);
		L.RegFunction("SetWebServerUrl", SetWebServerUrl);
		L.RegFunction("SetLoginServerInfo", SetLoginServerInfo);
		L.RegFunction("SetDefaultServer", SetDefaultServer);
		L.RegFunction("LoadCharactorConfig", LoadCharactorConfig);
		L.RegFunction("GetBoolean", GetBoolean);
		L.RegFunction("GetInt", GetInt);
		L.RegFunction("GetString", GetString);
		L.RegFunction("GetFloat", GetFloat);
		L.RegFunction("SetBoolean", SetBoolean);
		L.RegFunction("SetInt", SetInt);
		L.RegFunction("SetFloat", SetFloat);
		L.RegFunction("SetString", SetString);
		L.RegFunction("SetServerList", SetServerList);
		L.RegFunction("SetLastServerList", SetLastServerList);
		L.RegFunction("SetRoleInfoList", SetRoleInfoList);
		L.RegFunction("SetServerListLevel", SetServerListLevel);
		L.RegVar("web_url", get_web_url, set_web_url);
		L.RegVar("server_url", get_server_url, set_server_url);
		L.RegVar("default_server", get_default_server, set_default_server);
		L.RegVar("internal_sdk", get_internal_sdk, set_internal_sdk);
		L.RegVar("logoName", get_logoName, set_logoName);
		L.RegVar("sdk_server_url", get_sdk_server_url, set_sdk_server_url);
		L.RegVar("cdn_server_url", get_cdn_server_url, set_cdn_server_url);
		L.RegVar("resource_server", get_resource_server, set_resource_server);
		L.RegVar("apk_server", get_apk_server, set_apk_server);
		L.RegVar("user_account", get_user_account, set_user_account);
		L.RegVar("user_password", get_user_password, set_user_password);
		L.RegVar("gm_url", get_gm_url, set_gm_url);
		L.RegVar("serverList", get_serverList, set_serverList);
		L.RegVar("lastServerList", get_lastServerList, set_lastServerList);
		L.RegVar("roleInfoList", get_roleInfoList, set_roleInfoList);
		L.RegVar("recieveSystemChannel", get_recieveSystemChannel, set_recieveSystemChannel);
		L.RegVar("recieveWorldChannel", get_recieveWorldChannel, set_recieveWorldChannel);
		L.RegVar("recieveNearChannel", get_recieveNearChannel, set_recieveNearChannel);
		L.RegVar("recieveGangChannel", get_recieveGangChannel, set_recieveGangChannel);
		L.RegVar("recieveTeamChannel", get_recieveTeamChannel, set_recieveTeamChannel);
		L.RegVar("recieveStrangerChannel", get_recieveStrangerChannel, set_recieveStrangerChannel);
		L.RegVar("autoVoiceToText", get_autoVoiceToText, set_autoVoiceToText);
		L.RegVar("autoPlayWorldVoice", get_autoPlayWorldVoice, set_autoPlayWorldVoice);
		L.RegVar("autoPlayNearVoice", get_autoPlayNearVoice, set_autoPlayNearVoice);
		L.RegVar("autoPlayGangVoice", get_autoPlayGangVoice, set_autoPlayGangVoice);
		L.RegVar("autoPlayTeamVoice", get_autoPlayTeamVoice, set_autoPlayTeamVoice);
		L.RegVar("autoPlayPrivateChatVoice", get_autoPlayPrivateChatVoice, set_autoPlayPrivateChatVoice);
		L.RegVar("blockAllianPlayer", get_blockAllianPlayer, set_blockAllianPlayer);
		L.RegVar("blockOtherPartner", get_blockOtherPartner, set_blockOtherPartner);
		L.RegVar("blockOtherPlayer", get_blockOtherPlayer, set_blockOtherPlayer);
		L.RegVar("blockOtherLingqi", get_blockOtherLingqi, set_blockOtherLingqi);
		L.RegVar("blockOtherPet", get_blockOtherPet, set_blockOtherPet);
		L.RegVar("blockMonster", get_blockMonster, set_blockMonster);
		L.RegVar("blockOtherXiulianEffect", get_blockOtherXiulianEffect, set_blockOtherXiulianEffect);
		L.RegVar("blockShakeCamera", get_blockShakeCamera, set_blockShakeCamera);
		L.RegVar("showSimpleSkillEff", get_showSimpleSkillEff, set_showSimpleSkillEff);
		L.RegVar("blockAllTitleSpr", get_blockAllTitleSpr, set_blockAllTitleSpr);
		L.RegVar("playerScreenCount", get_playerScreenCount, set_playerScreenCount);
		L.RegConstant("MaxPlayerScreen", 20);
		L.RegVar("volumn", get_volumn, set_volumn);
		L.RegVar("quality", get_quality, set_quality);
		L.RegVar("isMusic", get_isMusic, set_isMusic);
		L.RegVar("isAudio", get_isAudio, set_isAudio);
		L.RegVar("useLuQi", get_useLuQi, set_useLuQi);
		L.RegVar("powSaving", get_powSaving, set_powSaving);
		L.RegVar("use_dadian", get_use_dadian, set_use_dadian);
		L.RegVar("attactTarget", get_attactTarget, set_attactTarget);
		L.RegVar("blockTaskRobot", get_blockTaskRobot, set_blockTaskRobot);
		L.RegVar("fpsInterval", get_fpsInterval, set_fpsInterval);
		L.RegVar("fpsLow", get_fpsLow, set_fpsLow);
		L.RegVar("fpsHigh", get_fpsHigh, set_fpsHigh);
		L.RegVar("VOICE_MD5_STRING", get_VOICE_MD5_STRING, null);
		L.RegVar("soundIp", get_soundIp, set_soundIp);
		L.RegVar("soundPort", get_soundPort, set_soundPort);
		L.RegVar("soundToken", get_soundToken, set_soundToken);
		L.RegVar("ip", get_ip, set_ip);
		L.RegVar("fightStatus", get_fightStatus, set_fightStatus);
		L.RegVar("noticesTime", get_noticesTime, set_noticesTime);
		L.EndStaticLibs();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Initilize(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			string arg0 = ToLua.CheckString(L, 1);
			Config.User_Config.Initilize(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadConfig(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			string arg0 = ToLua.CheckString(L, 1);
			Config.User_Config.LoadConfig(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ResetConfig(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			string arg0 = ToLua.CheckString(L, 1);
			Config.User_Config.ResetConfig(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetUserInfo(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			string arg0 = ToLua.CheckString(L, 1);
			string arg1 = ToLua.CheckString(L, 2);
			Config.User_Config.SetUserInfo(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadGlobalSetting(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			Config.User_Config.LoadGlobalSetting();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Save(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			Config.User_Config.Save();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SaveInEditorModel(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			Config.User_Config.SaveInEditorModel();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetWebServerUrl(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			string arg0 = ToLua.CheckString(L, 1);
			Config.User_Config.SetWebServerUrl(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetLoginServerInfo(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			ServerInfo arg0 = (ServerInfo)ToLua.CheckObject<ServerInfo>(L, 1);
			Config.User_Config.SetLoginServerInfo(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetDefaultServer(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
			Config.User_Config.SetDefaultServer(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadCharactorConfig(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			string arg0 = ToLua.CheckString(L, 1);
			Config.User_Config.LoadCharactorConfig(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetBoolean(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				string arg0 = ToLua.CheckString(L, 1);
				bool o = Config.User_Config.GetBoolean(arg0);
				LuaDLL.lua_pushboolean(L, o);
				return 1;
			}
			else if (count == 2)
			{
				string arg0 = ToLua.CheckString(L, 1);
				string arg1 = ToLua.CheckString(L, 2);
				bool o = Config.User_Config.GetBoolean(arg0, arg1);
				LuaDLL.lua_pushboolean(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Config.User_Config.GetBoolean");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetInt(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				string arg0 = ToLua.CheckString(L, 1);
				int o = Config.User_Config.GetInt(arg0);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else if (count == 2)
			{
				string arg0 = ToLua.CheckString(L, 1);
				string arg1 = ToLua.CheckString(L, 2);
				int o = Config.User_Config.GetInt(arg0, arg1);
				LuaDLL.lua_pushinteger(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Config.User_Config.GetInt");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetString(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				string arg0 = ToLua.CheckString(L, 1);
				string o = Config.User_Config.GetString(arg0);
				LuaDLL.lua_pushstring(L, o);
				return 1;
			}
			else if (count == 2)
			{
				string arg0 = ToLua.CheckString(L, 1);
				string arg1 = ToLua.CheckString(L, 2);
				string o = Config.User_Config.GetString(arg0, arg1);
				LuaDLL.lua_pushstring(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Config.User_Config.GetString");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetFloat(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				string arg0 = ToLua.CheckString(L, 1);
				float o = Config.User_Config.GetFloat(arg0);
				LuaDLL.lua_pushnumber(L, o);
				return 1;
			}
			else if (count == 2)
			{
				string arg0 = ToLua.CheckString(L, 1);
				string arg1 = ToLua.CheckString(L, 2);
				float o = Config.User_Config.GetFloat(arg0, arg1);
				LuaDLL.lua_pushnumber(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Config.User_Config.GetFloat");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetBoolean(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				string arg0 = ToLua.CheckString(L, 1);
				bool arg1 = LuaDLL.luaL_checkboolean(L, 2);
				Config.User_Config.SetBoolean(arg0, arg1);
				return 0;
			}
			else if (count == 3)
			{
				string arg0 = ToLua.CheckString(L, 1);
				string arg1 = ToLua.CheckString(L, 2);
				bool arg2 = LuaDLL.luaL_checkboolean(L, 3);
				Config.User_Config.SetBoolean(arg0, arg1, arg2);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Config.User_Config.SetBoolean");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetInt(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				string arg0 = ToLua.CheckString(L, 1);
				int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
				Config.User_Config.SetInt(arg0, arg1);
				return 0;
			}
			else if (count == 3)
			{
				string arg0 = ToLua.CheckString(L, 1);
				string arg1 = ToLua.CheckString(L, 2);
				int arg2 = (int)LuaDLL.luaL_checknumber(L, 3);
				Config.User_Config.SetInt(arg0, arg1, arg2);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Config.User_Config.SetInt");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetFloat(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				string arg0 = ToLua.CheckString(L, 1);
				float arg1 = (float)LuaDLL.luaL_checknumber(L, 2);
				Config.User_Config.SetFloat(arg0, arg1);
				return 0;
			}
			else if (count == 3)
			{
				string arg0 = ToLua.CheckString(L, 1);
				string arg1 = ToLua.CheckString(L, 2);
				float arg2 = (float)LuaDLL.luaL_checknumber(L, 3);
				Config.User_Config.SetFloat(arg0, arg1, arg2);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Config.User_Config.SetFloat");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetString(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				string arg0 = ToLua.CheckString(L, 1);
				string arg1 = ToLua.CheckString(L, 2);
				Config.User_Config.SetString(arg0, arg1);
				return 0;
			}
			else if (count == 3)
			{
				string arg0 = ToLua.CheckString(L, 1);
				string arg1 = ToLua.CheckString(L, 2);
				string arg2 = ToLua.CheckString(L, 3);
				Config.User_Config.SetString(arg0, arg1, arg2);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: Config.User_Config.SetString");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetServerList(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			System.Collections.ArrayList arg0 = (System.Collections.ArrayList)ToLua.CheckObject<System.Collections.ArrayList>(L, 1);
			Config.User_Config.SetServerList(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetLastServerList(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			System.Collections.ArrayList arg0 = (System.Collections.ArrayList)ToLua.CheckObject<System.Collections.ArrayList>(L, 1);
			Config.User_Config.SetLastServerList(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetRoleInfoList(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			System.Collections.ArrayList arg0 = (System.Collections.ArrayList)ToLua.CheckObject<System.Collections.ArrayList>(L, 1);
			Config.User_Config.SetRoleInfoList(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetServerListLevel(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			System.Collections.Generic.List<ServerInfo> arg0 = (System.Collections.Generic.List<ServerInfo>)ToLua.CheckObject(L, 1, typeof(System.Collections.Generic.List<ServerInfo>));
			Config.User_Config.SetServerListLevel(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_web_url(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, Config.User_Config.web_url);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_server_url(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, Config.User_Config.server_url);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_default_server(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, Config.User_Config.default_server);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_internal_sdk(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, Config.User_Config.internal_sdk);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_logoName(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, Config.User_Config.logoName);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_sdk_server_url(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, Config.User_Config.sdk_server_url);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_cdn_server_url(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, Config.User_Config.cdn_server_url);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_resource_server(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, Config.User_Config.resource_server);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_apk_server(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, Config.User_Config.apk_server);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_user_account(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, Config.User_Config.user_account);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_user_password(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, Config.User_Config.user_password);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_gm_url(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, Config.User_Config.gm_url);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_serverList(IntPtr L)
	{
		try
		{
			ToLua.PushSealed(L, Config.User_Config.serverList);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_lastServerList(IntPtr L)
	{
		try
		{
			ToLua.PushSealed(L, Config.User_Config.lastServerList);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_roleInfoList(IntPtr L)
	{
		try
		{
			ToLua.PushSealed(L, Config.User_Config.roleInfoList);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_recieveSystemChannel(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, Config.User_Config.recieveSystemChannel);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_recieveWorldChannel(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, Config.User_Config.recieveWorldChannel);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_recieveNearChannel(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, Config.User_Config.recieveNearChannel);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_recieveGangChannel(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, Config.User_Config.recieveGangChannel);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_recieveTeamChannel(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, Config.User_Config.recieveTeamChannel);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_recieveStrangerChannel(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, Config.User_Config.recieveStrangerChannel);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_autoVoiceToText(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, Config.User_Config.autoVoiceToText);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_autoPlayWorldVoice(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, Config.User_Config.autoPlayWorldVoice);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_autoPlayNearVoice(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, Config.User_Config.autoPlayNearVoice);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_autoPlayGangVoice(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, Config.User_Config.autoPlayGangVoice);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_autoPlayTeamVoice(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, Config.User_Config.autoPlayTeamVoice);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_autoPlayPrivateChatVoice(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, Config.User_Config.autoPlayPrivateChatVoice);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_blockAllianPlayer(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, Config.User_Config.blockAllianPlayer);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_blockOtherPartner(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, Config.User_Config.blockOtherPartner);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_blockOtherPlayer(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, Config.User_Config.blockOtherPlayer);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_blockOtherLingqi(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, Config.User_Config.blockOtherLingqi);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_blockOtherPet(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, Config.User_Config.blockOtherPet);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_blockMonster(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, Config.User_Config.blockMonster);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_blockOtherXiulianEffect(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, Config.User_Config.blockOtherXiulianEffect);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_blockShakeCamera(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, Config.User_Config.blockShakeCamera);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_showSimpleSkillEff(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, Config.User_Config.showSimpleSkillEff);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_blockAllTitleSpr(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, Config.User_Config.blockAllTitleSpr);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_playerScreenCount(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushnumber(L, Config.User_Config.playerScreenCount);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_volumn(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushnumber(L, Config.User_Config.volumn);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_quality(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, Config.User_Config.quality);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_isMusic(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, Config.User_Config.isMusic);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_isAudio(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, Config.User_Config.isAudio);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_useLuQi(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, Config.User_Config.useLuQi);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_powSaving(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, Config.User_Config.powSaving);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_use_dadian(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, Config.User_Config.use_dadian);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_attactTarget(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, Config.User_Config.attactTarget);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_blockTaskRobot(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, Config.User_Config.blockTaskRobot);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_fpsInterval(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, Config.User_Config.fpsInterval);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_fpsLow(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, Config.User_Config.fpsLow);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_fpsHigh(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, Config.User_Config.fpsHigh);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_VOICE_MD5_STRING(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, Config.User_Config.VOICE_MD5_STRING);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_soundIp(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, Config.User_Config.soundIp);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_soundPort(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, Config.User_Config.soundPort);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_soundToken(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, Config.User_Config.soundToken);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ip(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, Config.User_Config.ip);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_fightStatus(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushinteger(L, Config.User_Config.fightStatus);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_noticesTime(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, Config.User_Config.noticesTime);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_web_url(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			Config.User_Config.web_url = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_server_url(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			Config.User_Config.server_url = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_default_server(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			Config.User_Config.default_server = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_internal_sdk(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			Config.User_Config.internal_sdk = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_logoName(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			Config.User_Config.logoName = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_sdk_server_url(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			Config.User_Config.sdk_server_url = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_cdn_server_url(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			Config.User_Config.cdn_server_url = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_resource_server(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			Config.User_Config.resource_server = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_apk_server(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			Config.User_Config.apk_server = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_user_account(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			Config.User_Config.user_account = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_user_password(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			Config.User_Config.user_password = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_gm_url(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			Config.User_Config.gm_url = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_serverList(IntPtr L)
	{
		try
		{
			System.Collections.Generic.List<ServerInfo> arg0 = (System.Collections.Generic.List<ServerInfo>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<ServerInfo>));
			Config.User_Config.serverList = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_lastServerList(IntPtr L)
	{
		try
		{
			System.Collections.Generic.List<ServerInfo> arg0 = (System.Collections.Generic.List<ServerInfo>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<ServerInfo>));
			Config.User_Config.lastServerList = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_roleInfoList(IntPtr L)
	{
		try
		{
			System.Collections.Generic.List<RoleInfo> arg0 = (System.Collections.Generic.List<RoleInfo>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<RoleInfo>));
			Config.User_Config.roleInfoList = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_recieveSystemChannel(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			Config.User_Config.recieveSystemChannel = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_recieveWorldChannel(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			Config.User_Config.recieveWorldChannel = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_recieveNearChannel(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			Config.User_Config.recieveNearChannel = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_recieveGangChannel(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			Config.User_Config.recieveGangChannel = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_recieveTeamChannel(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			Config.User_Config.recieveTeamChannel = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_recieveStrangerChannel(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			Config.User_Config.recieveStrangerChannel = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_autoVoiceToText(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			Config.User_Config.autoVoiceToText = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_autoPlayWorldVoice(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			Config.User_Config.autoPlayWorldVoice = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_autoPlayNearVoice(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			Config.User_Config.autoPlayNearVoice = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_autoPlayGangVoice(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			Config.User_Config.autoPlayGangVoice = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_autoPlayTeamVoice(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			Config.User_Config.autoPlayTeamVoice = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_autoPlayPrivateChatVoice(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			Config.User_Config.autoPlayPrivateChatVoice = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_blockAllianPlayer(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			Config.User_Config.blockAllianPlayer = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_blockOtherPartner(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			Config.User_Config.blockOtherPartner = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_blockOtherPlayer(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			Config.User_Config.blockOtherPlayer = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_blockOtherLingqi(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			Config.User_Config.blockOtherLingqi = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_blockOtherPet(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			Config.User_Config.blockOtherPet = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_blockMonster(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			Config.User_Config.blockMonster = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_blockOtherXiulianEffect(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			Config.User_Config.blockOtherXiulianEffect = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_blockShakeCamera(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			Config.User_Config.blockShakeCamera = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_showSimpleSkillEff(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			Config.User_Config.showSimpleSkillEff = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_blockAllTitleSpr(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			Config.User_Config.blockAllTitleSpr = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_playerScreenCount(IntPtr L)
	{
		try
		{
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			Config.User_Config.playerScreenCount = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_volumn(IntPtr L)
	{
		try
		{
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			Config.User_Config.volumn = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_quality(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			Config.User_Config.quality = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_isMusic(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			Config.User_Config.isMusic = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_isAudio(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			Config.User_Config.isAudio = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_useLuQi(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			Config.User_Config.useLuQi = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_powSaving(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			Config.User_Config.powSaving = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_use_dadian(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			Config.User_Config.use_dadian = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_attactTarget(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			Config.User_Config.attactTarget = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_blockTaskRobot(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			Config.User_Config.blockTaskRobot = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_fpsInterval(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			Config.User_Config.fpsInterval = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_fpsLow(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			Config.User_Config.fpsLow = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_fpsHigh(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			Config.User_Config.fpsHigh = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_soundIp(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			Config.User_Config.soundIp = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_soundPort(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			Config.User_Config.soundPort = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_soundToken(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			Config.User_Config.soundToken = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ip(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			Config.User_Config.ip = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_fightStatus(IntPtr L)
	{
		try
		{
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			Config.User_Config.fightStatus = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_noticesTime(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			Config.User_Config.noticesTime = arg0;
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

