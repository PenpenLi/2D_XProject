//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class LuaFramework_CutsceneManagerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(LuaFramework.CutsceneManager), typeof(Manager));
		L.RegFunction("OnCutsceneEvent", OnCutsceneEvent);
		L.RegFunction("BackNomalEvent", BackNomalEvent);
		L.RegFunction("AddTrigger", AddTrigger);
		L.RegFunction("RemoveTrigger", RemoveTrigger);
		L.RegFunction("Clear", Clear);
		L.RegFunction("AddTriggerLog", AddTriggerLog);
		L.RegFunction("IsTrigged", IsTrigged);
		L.RegFunction("Trigger", Trigger);
		L.RegFunction("LoadCutscene", LoadCutscene);
		L.RegFunction("PlayCutscene", PlayCutscene);
		L.RegFunction("PreLoadCutscene", PreLoadCutscene);
		L.RegFunction("MainCameraFade", MainCameraFade);
		L.RegFunction("ClearAll", ClearAll);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("CurCutscene", get_CurCutscene, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnCutsceneEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LuaFramework.CutsceneManager obj = (LuaFramework.CutsceneManager)ToLua.CheckObject<LuaFramework.CutsceneManager>(L, 1);
			obj.OnCutsceneEvent();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int BackNomalEvent(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LuaFramework.CutsceneManager obj = (LuaFramework.CutsceneManager)ToLua.CheckObject<LuaFramework.CutsceneManager>(L, 1);
			obj.BackNomalEvent();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddTrigger(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaFramework.CutsceneManager obj = (LuaFramework.CutsceneManager)ToLua.CheckObject<LuaFramework.CutsceneManager>(L, 1);
			CinemaDirector.CutsceneTrigger arg0 = (CinemaDirector.CutsceneTrigger)ToLua.CheckObject<CinemaDirector.CutsceneTrigger>(L, 2);
			obj.AddTrigger(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveTrigger(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaFramework.CutsceneManager obj = (LuaFramework.CutsceneManager)ToLua.CheckObject<LuaFramework.CutsceneManager>(L, 1);
			CinemaDirector.CutsceneTrigger arg0 = (CinemaDirector.CutsceneTrigger)ToLua.CheckObject<CinemaDirector.CutsceneTrigger>(L, 2);
			obj.RemoveTrigger(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Clear(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LuaFramework.CutsceneManager obj = (LuaFramework.CutsceneManager)ToLua.CheckObject<LuaFramework.CutsceneManager>(L, 1);
			obj.Clear();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int AddTriggerLog(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaFramework.CutsceneManager obj = (LuaFramework.CutsceneManager)ToLua.CheckObject<LuaFramework.CutsceneManager>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.AddTriggerLog(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IsTrigged(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaFramework.CutsceneManager obj = (LuaFramework.CutsceneManager)ToLua.CheckObject<LuaFramework.CutsceneManager>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			bool o = obj.IsTrigged(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Trigger(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaFramework.CutsceneManager obj = (LuaFramework.CutsceneManager)ToLua.CheckObject<LuaFramework.CutsceneManager>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.Trigger(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LoadCutscene(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaFramework.CutsceneManager obj = (LuaFramework.CutsceneManager)ToLua.CheckObject<LuaFramework.CutsceneManager>(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.LoadCutscene(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int PlayCutscene(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			LuaFramework.CutsceneManager obj = (LuaFramework.CutsceneManager)ToLua.CheckObject<LuaFramework.CutsceneManager>(L, 1);
			CinemaDirector.Cutscene arg0 = (CinemaDirector.Cutscene)ToLua.CheckObject<CinemaDirector.Cutscene>(L, 2);
			obj.PlayCutscene(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int PreLoadCutscene(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			LuaFramework.CutsceneManager obj = (LuaFramework.CutsceneManager)ToLua.CheckObject<LuaFramework.CutsceneManager>(L, 1);
			UnityEngine.GameObject arg0 = (UnityEngine.GameObject)ToLua.CheckObject(L, 2, typeof(UnityEngine.GameObject));
			Riverlake.Resources.LoadStageAsync arg1 = (Riverlake.Resources.LoadStageAsync)ToLua.CheckObject<Riverlake.Resources.LoadStageAsync>(L, 3);
			obj.PreLoadCutscene(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int MainCameraFade(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 4);
			LuaFramework.CutsceneManager obj = (LuaFramework.CutsceneManager)ToLua.CheckObject<LuaFramework.CutsceneManager>(L, 1);
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			float arg1 = (float)LuaDLL.luaL_checknumber(L, 3);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 4);
			obj.MainCameraFade(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ClearAll(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			LuaFramework.CutsceneManager obj = (LuaFramework.CutsceneManager)ToLua.CheckObject<LuaFramework.CutsceneManager>(L, 1);
			obj.ClearAll();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CurCutscene(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			LuaFramework.CutsceneManager obj = (LuaFramework.CutsceneManager)o;
			CinemaDirector.Cutscene ret = obj.CurCutscene;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index CurCutscene on a nil value");
		}
	}
}

