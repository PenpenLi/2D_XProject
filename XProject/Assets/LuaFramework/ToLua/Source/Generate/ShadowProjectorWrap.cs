//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class ShadowProjectorWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(ShadowProjector), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("GetBounds", GetBounds);
		L.RegFunction("IsVisible", IsVisible);
		L.RegFunction("SetVisible", SetVisible);
		L.RegFunction("OnPreRenderShadowProjector", OnPreRenderShadowProjector);
		L.RegFunction("ShadowDummyLocalToWorldMatrix", ShadowDummyLocalToWorldMatrix);
		L.RegFunction("GetShadowWorldSize", GetShadowWorldSize);
		L.RegFunction("GetShadowPos", GetShadowPos);
		L.RegFunction("OnShadowColorChanged", OnShadowColorChanged);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("_Material", get__Material, set__Material);
		L.RegVar("ProjectorBounds", get_ProjectorBounds, set_ProjectorBounds);
		L.RegVar("ShadowSize", get_ShadowSize, set_ShadowSize);
		L.RegVar("ShadowColor", get_ShadowColor, set_ShadowColor);
		L.RegVar("ShadowOpacity", get_ShadowOpacity, set_ShadowOpacity);
		L.RegVar("ShadowLocalOffset", get_ShadowLocalOffset, set_ShadowLocalOffset);
		L.RegVar("RotationAngleOffset", get_RotationAngleOffset, set_RotationAngleOffset);
		L.RegVar("FreezeXRot", get_FreezeXRot, set_FreezeXRot);
		L.RegVar("FreezeYRot", get_FreezeYRot, set_FreezeYRot);
		L.RegVar("FreezeZRot", get_FreezeZRot, set_FreezeZRot);
		L.RegVar("UVRect", get_UVRect, set_UVRect);
		L.RegVar("AutoSizeOpacity", get_AutoSizeOpacity, set_AutoSizeOpacity);
		L.RegVar("AutoSOCutOffDistance", get_AutoSOCutOffDistance, set_AutoSOCutOffDistance);
		L.RegVar("AutoSORayOriginOffset", get_AutoSORayOriginOffset, set_AutoSORayOriginOffset);
		L.RegVar("AutoSOMaxScaleMultiplier", get_AutoSOMaxScaleMultiplier, set_AutoSOMaxScaleMultiplier);
		L.RegVar("AutoSORaycastLayer", get_AutoSORaycastLayer, set_AutoSORaycastLayer);
		L.RegVar("CacheTrans", get_CacheTrans, null);
		L.RegVar("BoundCenterOffset", get_BoundCenterOffset, set_BoundCenterOffset);
		L.RegVar("EnableProjector", get_EnableProjector, set_EnableProjector);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetBounds(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			ShadowProjector obj = (ShadowProjector)ToLua.CheckObject<ShadowProjector>(L, 1);
			UnityEngine.Bounds o = obj.GetBounds();
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IsVisible(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			ShadowProjector obj = (ShadowProjector)ToLua.CheckObject<ShadowProjector>(L, 1);
			bool o = obj.IsVisible();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetVisible(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			ShadowProjector obj = (ShadowProjector)ToLua.CheckObject<ShadowProjector>(L, 1);
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.SetVisible(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnPreRenderShadowProjector(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			ShadowProjector obj = (ShadowProjector)ToLua.CheckObject<ShadowProjector>(L, 1);
			ProjectorCamera arg0 = (ProjectorCamera)ToLua.CheckObject<ProjectorCamera>(L, 2);
			obj.OnPreRenderShadowProjector(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ShadowDummyLocalToWorldMatrix(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			ShadowProjector obj = (ShadowProjector)ToLua.CheckObject<ShadowProjector>(L, 1);
			UnityEngine.Matrix4x4 o = obj.ShadowDummyLocalToWorldMatrix();
			ToLua.PushValue(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetShadowWorldSize(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			ShadowProjector obj = (ShadowProjector)ToLua.CheckObject<ShadowProjector>(L, 1);
			float o = obj.GetShadowWorldSize();
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetShadowPos(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			ShadowProjector obj = (ShadowProjector)ToLua.CheckObject<ShadowProjector>(L, 1);
			UnityEngine.Vector3 o = obj.GetShadowPos();
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnShadowColorChanged(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			ShadowProjector obj = (ShadowProjector)ToLua.CheckObject<ShadowProjector>(L, 1);
			obj.OnShadowColorChanged();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get__Material(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ShadowProjector obj = (ShadowProjector)o;
			UnityEngine.Material ret = obj._Material;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index _Material on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ProjectorBounds(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ShadowProjector obj = (ShadowProjector)o;
			UnityEngine.Bounds ret = obj.ProjectorBounds;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ProjectorBounds on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ShadowSize(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ShadowProjector obj = (ShadowProjector)o;
			float ret = obj.ShadowSize;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ShadowSize on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ShadowColor(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ShadowProjector obj = (ShadowProjector)o;
			UnityEngine.Color ret = obj.ShadowColor;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ShadowColor on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ShadowOpacity(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ShadowProjector obj = (ShadowProjector)o;
			float ret = obj.ShadowOpacity;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ShadowOpacity on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ShadowLocalOffset(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ShadowProjector obj = (ShadowProjector)o;
			UnityEngine.Vector3 ret = obj.ShadowLocalOffset;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ShadowLocalOffset on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_RotationAngleOffset(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ShadowProjector obj = (ShadowProjector)o;
			UnityEngine.Quaternion ret = obj.RotationAngleOffset;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index RotationAngleOffset on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_FreezeXRot(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ShadowProjector obj = (ShadowProjector)o;
			bool ret = obj.FreezeXRot;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index FreezeXRot on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_FreezeYRot(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ShadowProjector obj = (ShadowProjector)o;
			bool ret = obj.FreezeYRot;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index FreezeYRot on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_FreezeZRot(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ShadowProjector obj = (ShadowProjector)o;
			bool ret = obj.FreezeZRot;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index FreezeZRot on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_UVRect(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ShadowProjector obj = (ShadowProjector)o;
			UnityEngine.Rect ret = obj.UVRect;
			ToLua.PushValue(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index UVRect on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_AutoSizeOpacity(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ShadowProjector obj = (ShadowProjector)o;
			bool ret = obj.AutoSizeOpacity;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index AutoSizeOpacity on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_AutoSOCutOffDistance(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ShadowProjector obj = (ShadowProjector)o;
			float ret = obj.AutoSOCutOffDistance;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index AutoSOCutOffDistance on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_AutoSORayOriginOffset(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ShadowProjector obj = (ShadowProjector)o;
			float ret = obj.AutoSORayOriginOffset;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index AutoSORayOriginOffset on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_AutoSOMaxScaleMultiplier(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ShadowProjector obj = (ShadowProjector)o;
			float ret = obj.AutoSOMaxScaleMultiplier;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index AutoSOMaxScaleMultiplier on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_AutoSORaycastLayer(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ShadowProjector obj = (ShadowProjector)o;
			int ret = obj.AutoSORaycastLayer;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index AutoSORaycastLayer on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_CacheTrans(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ShadowProjector obj = (ShadowProjector)o;
			UnityEngine.Transform ret = obj.CacheTrans;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index CacheTrans on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_BoundCenterOffset(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ShadowProjector obj = (ShadowProjector)o;
			UnityEngine.Vector3 ret = obj.BoundCenterOffset;
			ToLua.Push(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index BoundCenterOffset on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_EnableProjector(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ShadowProjector obj = (ShadowProjector)o;
			bool ret = obj.EnableProjector;
			LuaDLL.lua_pushboolean(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index EnableProjector on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set__Material(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ShadowProjector obj = (ShadowProjector)o;
			UnityEngine.Material arg0 = (UnityEngine.Material)ToLua.CheckObject<UnityEngine.Material>(L, 2);
			obj._Material = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index _Material on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ProjectorBounds(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ShadowProjector obj = (ShadowProjector)o;
			UnityEngine.Bounds arg0 = ToLua.ToBounds(L, 2);
			obj.ProjectorBounds = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ProjectorBounds on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ShadowSize(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ShadowProjector obj = (ShadowProjector)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.ShadowSize = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ShadowSize on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ShadowColor(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ShadowProjector obj = (ShadowProjector)o;
			UnityEngine.Color arg0 = ToLua.ToColor(L, 2);
			obj.ShadowColor = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ShadowColor on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ShadowOpacity(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ShadowProjector obj = (ShadowProjector)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.ShadowOpacity = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ShadowOpacity on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_ShadowLocalOffset(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ShadowProjector obj = (ShadowProjector)o;
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.ShadowLocalOffset = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ShadowLocalOffset on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_RotationAngleOffset(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ShadowProjector obj = (ShadowProjector)o;
			UnityEngine.Quaternion arg0 = ToLua.ToQuaternion(L, 2);
			obj.RotationAngleOffset = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index RotationAngleOffset on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_FreezeXRot(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ShadowProjector obj = (ShadowProjector)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.FreezeXRot = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index FreezeXRot on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_FreezeYRot(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ShadowProjector obj = (ShadowProjector)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.FreezeYRot = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index FreezeYRot on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_FreezeZRot(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ShadowProjector obj = (ShadowProjector)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.FreezeZRot = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index FreezeZRot on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_UVRect(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ShadowProjector obj = (ShadowProjector)o;
			UnityEngine.Rect arg0 = StackTraits<UnityEngine.Rect>.Check(L, 2);
			obj.UVRect = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index UVRect on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_AutoSizeOpacity(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ShadowProjector obj = (ShadowProjector)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.AutoSizeOpacity = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index AutoSizeOpacity on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_AutoSOCutOffDistance(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ShadowProjector obj = (ShadowProjector)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.AutoSOCutOffDistance = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index AutoSOCutOffDistance on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_AutoSORayOriginOffset(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ShadowProjector obj = (ShadowProjector)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.AutoSORayOriginOffset = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index AutoSORayOriginOffset on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_AutoSOMaxScaleMultiplier(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ShadowProjector obj = (ShadowProjector)o;
			float arg0 = (float)LuaDLL.luaL_checknumber(L, 2);
			obj.AutoSOMaxScaleMultiplier = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index AutoSOMaxScaleMultiplier on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_AutoSORaycastLayer(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ShadowProjector obj = (ShadowProjector)o;
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 2);
			obj.AutoSORaycastLayer = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index AutoSORaycastLayer on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_BoundCenterOffset(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ShadowProjector obj = (ShadowProjector)o;
			UnityEngine.Vector3 arg0 = ToLua.ToVector3(L, 2);
			obj.BoundCenterOffset = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index BoundCenterOffset on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_EnableProjector(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			ShadowProjector obj = (ShadowProjector)o;
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			obj.EnableProjector = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index EnableProjector on a nil value");
		}
	}
}

